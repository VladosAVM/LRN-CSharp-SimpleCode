using System;

/* Преобразование строк
 * 
 * Методы - Parse и TryParse
 * 
 * Источник: https://www.youtube.com/watch?v=rMEzXVgxQ7o
 */

namespace _007___Преобразование_строк___Parse__TryParse
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /* Parse
             * 
             * Метод Parse направлен на работу со строками и
             * позволяют извлекать числовые данные из строковых переменных.
             * 
             * Синтаксис метода Parse:
             * Числовой_тип_данных имя_переменной = числовой_тип_данных.Parse(имя_строковой_переменной);
             */
            Console.WriteLine("Метод Parse - извлечение данных из переменной testData");
            string testData = "5"; // Тестовая переменная
            int a = int.Parse(testData); // Пример синтаксиса метода Parse
            Console.WriteLine(a);

            Console.WriteLine("Проверка данных на то что это число путём умножения на 2");
            Console.WriteLine(a * 2);


            /* TryParse
             * 
             * Метод TryParse отличается от метода Parse, тем что в случае
             * ошибки извлечения данных, он не бросате исключение, а
             * просто присваивает значение переменной равное "0"
             * 
             * Данный метод принимает 2-а аргумента и возвращает
             * 2-а результата своей работы.
             * 
             * Принимаемые аргументы:
             * 1-ый аргумент который принимает метод это строковая переменна
             * из которой будет происходить попытка извлечения данных.
             * 2-ой аргумент это числовой тип данных который будет
             * инициализирован внутри метода и вернёт извлечённое число.
             * 
             * Возвращаемые значения:
             * 1-ое возвращаемое значение это булевая переменная
             * которая может принимать значения True и False.
             * Значение True будет возвращено в случае иуспешного извлечения данных
             * и значение False в случае неудачного извлечения данных
             * 2-ое возвращаемое значение это извлечённое число в случае успеха
             * или значение "0" в случае неудачного извлечения данных.
             *
             * Таким образом при помощи метода TryParse мы можем не только избежать
             * выбрасывания исключений но и заранее определить положительный или
             * отрецательный результат попытки извлечения данных, что позволит
             * заранее избежать некоректных вычислений и нагрузки программы
             * в случае ошибки извлечения данных.
             * 
             * Синтаксис метода TryParse:
             * Числовой_тип_данных 
             */


            // Пример корректного извлечения данных
            Console.WriteLine("- - - - - - - - - - - -\nПример корректного извлечения данных");

            string testBadData = "9";
            bool isBrokenData = int.TryParse(testBadData, out int result1);
            Console.WriteLine(isBrokenData);
            Console.WriteLine(result1);

            // Пример НЕкорректного извлечения данных
            Console.WriteLine("\nПример НЕкорректного извлечения данных");
            string testGoodData = "9avm";
            bool isGoodData = int.TryParse(testGoodData, out int result2);
            Console.WriteLine(isGoodData);
            Console.WriteLine(result2);
        }
    }
}
