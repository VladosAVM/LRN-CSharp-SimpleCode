using System;

/* Операторы, арифметические операции с числами
 * 
 * Источник: https://www.youtube.com/watch?v=CyMOlixfPMA
 */

namespace _008___Операторы__арифметические_операции_с_числами
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /* Операторы это синтаксические конструкции языка
             * программирования, которые позволяют производить какие-либо
             * операции над данными.
             * Данные над которыми производятся операции, называются операндами.
             * 
             * Операторы бывают:
             *  - Унарные (инкримент ++, дикримент --,)
             *  - Бинарные ( +, -, *, /, диление по модулю %)
             *  - Тернарные (условный оператор ?:)
             *  
             * Cинтаксис бинарных операторов:
             * Имя_операнда бинарный_оператор имя_операнда....
             */
            
            // Инициализация 2-х целочисленных переменных с данными
            int a = 2;
            int b = 5;

            // Пример применения бинарного оператора с 2-мя
            // операндами без сохранения результата в переменной
            Console.WriteLine("Переменная а = " + a);
            Console.WriteLine("Переменная b = " + b);
            Console.WriteLine("а + b = " + (a + b));
            Console.WriteLine("а - b = " + (a - b));
            Console.WriteLine("а * b = " + (a * b));
            Console.WriteLine("а / b = " + (a / b));
            Console.WriteLine("а % b = " + (a % b));

            // Пример применения бинарного оператора с 2-мя
            // операндами с сохранением результата в переменной
            Console.WriteLine("\nПример сохранения, вычисления и вывода числа");
            int intResult = a + b;
            Console.WriteLine("а + b = " + intResult);

            /* При соверщении операции диления над целочисленными данными
             * остаток округляется
             * 
             * Для того чтобы произвести вычисления над целыми числами
             * и сохранить дробную часть, необходимо преобразовать
             * целые числа в дробные и сохранить результат в тот тип данных
             * который позволяет хранить дробные числа
             * 
             * Преобразовать целые числа можно как по отдельности при помощи
             * класса Convert
             *   Пример:
             *    double имя_переменной = Convert.ToDouble(имя_переменной) / Convert.ToDouble(имя_переменной);
             * 
             * так и использовав указание типа double перед выражением
             *   Пример:
             *    double имя_переменной = (double) a / b;
             */

            // Пример вычисления и вывода дробного числа
            // из целочисленных переменных
            Console.WriteLine("\n- - - - - - - - -\nПример вывода дробного числа");
            Console.WriteLine("а / b = " + Convert.ToDouble(a) / Convert.ToDouble(b));


            // Пример сохранения, вычисления и вывода дробного числа
            // из целочисленных переменных
            Console.WriteLine("\nПример сохранения, вычисления и вывода дробного числа");
            double doubleResult = Convert.ToDouble(a) / Convert.ToDouble(b);
            Console.WriteLine("а / b = " + doubleResult);

            // Упрощенные варианты предидущих способов
            Console.WriteLine("\n- - - - - - - - -\nУпрощённые варианты");

            Console.WriteLine("\nПример вывода дробного числа");
            Console.WriteLine("а / b = " + (double)a / b);

            Console.WriteLine("\nПример сохранения, вычисления и вывода дробного числа");
            double simpleDoubleResult = (double) a / b;
            Console.WriteLine("а / b = " + simpleDoubleResult);
        }
    }
}
