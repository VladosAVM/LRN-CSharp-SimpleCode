using System;

/* Инкремент и Декремент - Постфиксный и Префиксный
 * 
 * Источник: https://www.youtube.com/watch?v=4O2Nb-kdFng
 */

namespace _011___Инкремент_и_Декремент
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /* Инкремент и Декремент это унарная арефметическая операция.
             * Они имеют 2 формы - префиксную и постфиксную.
             * Суть данной арефметической операции заключается в
             * увеличении или уменьшении значения переменной на единицу.
             * 
             * Синтаксис постфиксного инкремента переменной:
             * Имя_переменной++;
             * 
             * Синтаксис префиксного декремента переменной:
             * 
             * Разница между префиксными и суфиксными инкриментом и
             * декрементом заключается в порядке их выполнения.
             * Префиксный инкримент имеет более высокий приоритет
             * в отличии от постфиксного.
             *
             * Порядок приоритета арефметичских операций
             * от наивысшего к низшему:
             * 1. ++i, --i      ~ Префиксный инкремент и декремент
             * 2. ()            ~ Скобки
             * 3. *,  /,  %     ~ Умножение, диление, остаток от диления
             * 4. i++, i--      ~ Постфиксный инкремент и декремент
             * 5. +, -          ~ Сложение и вычитание
             * 
             * Заключение инкремента или декремента в скобки (i++) не оказывает
             * влияния на его приоритет.
             * 
             * По сути инкремент и декремент работают аналогично записям:
             *      1. i++ = i + 1
             *      2. ++i = i + 1
             *      3. i-- = i - 1
             *      4. --i = i - 1
             *      
             * Однако есть большая разница в работе постфиксно и префиксной
             * формах которую необходимо детально изучить для понимания их
             * работы и избежания ошибок в вычислениях.
             * 
             * Примеры:
             */

            // Простая форма записи постфиксного инкремента
            int a = 0;
            a++;
            Console.WriteLine($"Простая форма записи постфиксного инкремента" +
                              $"\nint a = 0;" +
                              $"\na++;" +
                              $"\na = {a}");

            // Разница приоритета форм при вычислениях
            Console.WriteLine("\n\n\n\n- - - Разница приоритета форм при вычислениях - - -\n");
            // Постфиксная форма
            int b = 0;
            Console.WriteLine("Постфиксная форма: i++ = " + b++);
            /* 
             * В примере с постфиксным инкрементом наглядно показано,
             * что сначала в консоль выведится значение переменной и
             * только потом оно будет увеличино на единицу.
             */

            // Префиксная форма
            int c = 0;
            Console.WriteLine("Префиксная форма:  ++i = " + ++c);

            /*
             * В случае с префиксным инкрементом ситуация совершенно
             * другая. Сначала производится увеличение на единицу и
             * только потом вывод в консоль результата операции.
             * 
             * Аналогично ситуация обстаит и с декрементом.
             */

            // Мини задачка - попробуйте посчитать в уме
            // результат сделующей операции:
            int x = 1;
            x = ++x * x;
            Console.WriteLine($"\n\n\n          - - - Мини задачка #1 - - -" +
                              $"\nПопробуйте посчитать результат примера в уме" +
                              $"\nint x = 1;" +
                              $"\nx = ++x * x;" +
                              $"\n\nДля демонстрации результата нажмите Enter");
            Console.ReadLine();
            Console.WriteLine($"x = {x}\n\n\n");

            // Повторим эксперемент, только теперь
            // с постфиксным инкрементом
            int y = 1;
            y = y++ * y;
            Console.WriteLine($"\n\n\n          - - - Мини задачка #2 - - -" +
                              $"\nПопробуйте посчитать результат примера в уме" +
                              $"\nint x = 1;" +
                              $"\nx = x++ * x;" +
                              $"\n\nДля демонстрации результата нажмите Enter");
            Console.ReadLine();
            Console.WriteLine($"x = {y}\n\n\n");

        }
    }
}
